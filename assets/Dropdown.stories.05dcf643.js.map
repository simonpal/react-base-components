{"version":3,"file":"Dropdown.stories.05dcf643.js","sources":["../../src/components/hooks/hooks.tsx","../../src/components/icons/AngleDownIcon.tsx","../../src/components/Dropdown/DropdownItem.tsx","../../src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useEffect, useState } from 'react'\n\nexport const useRoveFocus = (\n  size: number,\n  enabled: boolean,\n): [number, Dispatch<SetStateAction<number>>] => {\n  const [currentFocus, setCurrentFocus] = useState<number>(0)\n\n  const handleKeyDown = useCallback(\n    (e: any) => {\n      if (!enabled) return\n      if (e.keyCode === 40) {\n        // Down arrow\n        e.preventDefault()\n        setCurrentFocus(currentFocus === size - 1 ? 0 : currentFocus + 1)\n      } else if (e.keyCode === 38) {\n        // Up arrow\n        e.preventDefault()\n        setCurrentFocus(currentFocus === 0 ? size - 1 : currentFocus - 1)\n      }\n    },\n    [size, currentFocus, setCurrentFocus, enabled],\n  )\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown, false)\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false)\n    }\n  }, [handleKeyDown])\n\n  return [currentFocus, setCurrentFocus]\n}\n\nexport const useOutsideClick = (ref: any, cb: () => void) => {\n  /**\n   * Alert if clicked on outside of element\n   */\n  function handleClickOutside(event: MouseEvent) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      cb()\n    }\n  }\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  })\n}\n\nexport const useDebouncedValue = (value: any | undefined, delay: number) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object'\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize)\n\n  useEffect(() => {\n    if (!isClient) {\n      return undefined\n    }\n\n    function handleResize() {\n      setWindowSize(getSize())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize\n}\n\nexport const useScript = (url: string) => {\n  useEffect(() => {\n    const script = document.createElement('script')\n\n    script.src = url\n    script.async = true\n\n    document.body.appendChild(script)\n\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [url])\n}\n\n/* useCookie */\n\ntype CookieOptions = {\n  expires?: Date | number | string\n  path?: string\n  domain?: string\n  secure?: boolean\n}\n\nconst isBrowser = typeof window !== 'undefined'\n\nexport const setCookie = (name: string, value: any, options: CookieOptions) => {\n  if (!isBrowser) return\n\n  const optionsWithDefaults = {\n    days: 7,\n    path: '/',\n    ...options,\n  }\n\n  const expires = new Date(Date.now() + optionsWithDefaults.days * 864e5).toUTCString()\n\n  document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=${\n    optionsWithDefaults.path\n  }`\n}\n\nexport const getCookie = (name: string, initialValue = '') => {\n  return (\n    (isBrowser &&\n      document.cookie.split('; ').reduce((r, v) => {\n        const parts = v.split('=')\n        return parts[0] === name ? decodeURIComponent(parts[1]) : r\n      }, '')) ||\n    initialValue\n  )\n}\n\nexport const useCookie = (key: string, initialValue: string) => {\n  const [item, setItem] = useState(() => {\n    return getCookie(key, initialValue)\n  })\n\n  const updateItem = (value: string, options: CookieOptions) => {\n    setItem(value)\n    setCookie(key, value, options)\n  }\n\n  return [item, updateItem]\n}\n","import { IconWrapper } from './SvgWrapper'\n\nexport const AngleDownIcon: React.FC<React.HTMLAttributes<SVGElement>> = (props) => (\n  <IconWrapper viewBox=\"0 0 20 20\" {...props}>\n    <title>expand</title>\n    <path d=\"M19 6.25l-1.5-1.5-7.5 7.5-7.5-7.5L1 6.25l9 9 9-9z\" />\n  </IconWrapper>\n)\n","import React, { useEffect, useRef } from 'react'\n\nexport type Option = {\n  value: string\n  text: string\n  key: string\n}\n\nexport type DropdownItemProps = {\n  option: Option\n  focus: boolean\n  index: number\n  handleClick: (e: any, option: Option, index: number) => void\n}\n\nexport const DropdownItem: React.FunctionComponent<\n  DropdownItemProps & React.HTMLAttributes<HTMLLIElement>\n> = ({ option, focus, index, handleClick }) => {\n  const ref = useRef<HTMLLIElement>(null)\n\n  useEffect(() => {\n    if (focus && ref.current) {\n      // Move element into view when it is focused\n      ref.current.focus()\n      ref.current.setAttribute('aria-selected', 'true')\n    } else if (!focus && ref.current) {\n      ref.current.setAttribute('aria-selected', 'false')\n    }\n  }, [focus])\n\n  return (\n    <li\n      role=\"option\"\n      aria-checked={focus}\n      aria-selected={focus}\n      onClick={(e) => handleClick(e, option, index)}\n      tabIndex={focus ? 0 : -1}\n      ref={ref}\n      onKeyPress={(e) => handleClick(e, option, index)}\n    >\n      {option.text}\n    </li>\n  )\n}\n","import React, { forwardRef, useCallback, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { useRoveFocus } from '../hooks/hooks'\nimport { AngleDownIcon } from '../icons/AngleDownIcon'\nimport { DropdownItem, Option } from './DropdownItem'\n\nconst StyledDropdown = styled.div`\n  background-color: #fff;\n  border: 1px solid #eee;\n  border-radius: var(--input-radius, 0);\n  position: relative;\n  height: var(--size-input-default, 3rem);\n  min-height: 2.5rem;\n  align-items: center;\n  display: inline-flex;\n  padding: var(--spacing-s);\n  cursor: pointer;\n  color: #000;\n\n  &.is-focused {\n    border: 1px solid #eee;\n  }\n\n  .dropdown-icon {\n    transition: transform 0.2s ease;\n    transform-origin: center center;\n    position: absolute;\n    top: 50%;\n    right: var(--spacing-s);\n    transform: translateY(-50%) rotate(0);\n    display: inline-flex;\n    align-items: center;\n\n    > svg path {\n      fill: #000;\n    }\n\n    &.is-focused {\n      transform: translateY(-50%) rotate(180deg);\n    }\n  }\n\n  input.dropdown-input {\n    border: 0;\n    background: transparent;\n    color: #000;\n    width: 100%;\n    margin-left: 0px;\n    padding: 0;\n\n    &.has-icon {\n      width: calc(100% - var(--spacing-l));\n      margin-left: var(--spacing-l);\n    }\n\n    &.has-value::placeholder {\n      opacity: 0.5;\n    }\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  .dropdown {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    position: absolute;\n    overflow: auto;\n    top: auto;\n    bottom: calc(100% + 1px);\n    left: 0;\n    width: 100%;\n    border-width: 1px 1px 1px;\n    border-style: solid;\n    border-color: #eee;\n    box-shadow: 0 3px 6px 0px rgba(0, 0, 0, 0.16);\n    background: #fff;\n    transform: scaleY(0);\n    transition: transform 0.2s ease;\n    transform-origin: bottom left;\n    z-index: 5;\n\n    &.from-top {\n      top: calc(100% + 1px);\n      bottom: auto;\n      transform-origin: top left;\n    }\n\n    &.is-focused {\n      transform: scaleY(1);\n    }\n\n    > li {\n      border-top: 1px solid #eee;\n      padding: var(--spacing-2xs) var(--spacing-s);\n      font-size: 1rem;\n\n      &:last-of-type {\n        border-bottom: 0;\n      }\n\n      &:hover {\n        background: #eee;\n      }\n\n      &[aria-selected='true'] {\n        border: 1px 0 1px 0 solid #0000ff;\n      }\n\n      &.locate-menu-item {\n        border-top: 1px solid #f5f5f5;\n        padding: 0;\n      }\n    }\n  }\n\n  &.disabled {\n    cursor: default;\n    opacity: 0.5;\n  }\n\n  button.clear-button {\n    border: 0;\n    background: transparent;\n    margin-right: var(--spacing-s);\n    position: relative;\n    z-index: 2;\n    padding: 0 var(--spacing-xs) 0 0;\n    cursor: pointer;\n    flex-shrink: 0;\n\n    &:disabled {\n      opacity: 0.2;\n    }\n\n    > svg path {\n      fill: var(--color-grey-scale-black);\n    }\n  }\n\n  .icon {\n    margin-right: var(--spacing-s);\n    position: relative;\n    top: 0;\n    left: 0;\n    transform: none;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n\n    svg path {\n      fill: #000;\n    }\n\n    &.search-icon {\n      margin-right: 0;\n      position: absolute;\n      top: 50%;\n      left: var(--spacing-s);\n      transform: translateY(-50%);\n    }\n  }\n\n  .styled-label {\n    font-size: 1rem;\n    font-weight: bold;\n    display: flex;\n    padding-right: var(--spacing-l);\n\n    &.clearable {\n      padding-right: var(--spacing-s);\n    }\n  }\n\n  .locate-button {\n    background: none;\n    padding: var(--spacing-xs);\n    font-size: 1rem;\n    border: 0;\n    display: flex;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    cursor: pointer;\n    width: 100%;\n    align-items: center;\n    font-weight: bold;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.05);\n    }\n\n    svg {\n      flex-shrink: 0;\n      margin-right: var(--spacing-2xs);\n\n      path {\n        fill: #000;\n      }\n    }\n  }\n`\n\n// TODO: Search is buggy, needs some fixing\n\nconst debounce = (delay: number, fn: any) => {\n  let inDebounce: any = null\n  return (args: any) => {\n    clearTimeout(inDebounce)\n    inDebounce = setTimeout(() => fn(args), delay)\n  }\n}\n\nexport type DropdownProps = {\n  placeholder: string\n  options?: Option[]\n  search?: boolean\n  disabled?: boolean\n  defaultValue?: string\n  handleChange?: (val: Option | null) => void\n  icon?: JSX.Element\n  value?: string\n  clearable?: boolean\n  maxHeight?: string\n}\n\nexport const Dropdown = forwardRef<\n  HTMLUListElement,\n  DropdownProps & React.HTMLAttributes<HTMLDivElement>\n>(\n  (\n    {\n      placeholder,\n      options,\n      search,\n      disabled,\n      defaultValue,\n      value,\n      icon,\n      // clearable,\n      handleChange,\n      maxHeight: setMaxHeight,\n      ...rest\n    },\n    ref?: React.Ref<HTMLUListElement>,\n  ) => {\n    const [selectedValue, setSelectedValue] = useState<string | undefined>(defaultValue)\n    const [searchValue, setSearchValue] = useState<string>('')\n    const [isFocused, setIsFocused] = useState<boolean>(false)\n    const [fromTop, setFromTop] = useState<boolean>(true)\n    const [dropMaxHeight, setDropMaxHeight] = useState<number>(300)\n    const [hasValue, setHasValue] = useState<boolean>(false)\n    const [filteredOptions, setFilteredOptions] = useState<Option[]>(options || [])\n    const [focus, setFocus] = useRoveFocus(filteredOptions ? filteredOptions?.length : 0, isFocused)\n\n    const dropMenuRef = useRef<HTMLDivElement>(null)\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const handleClick = (e: any, option: Option, index: number) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      if (e.nativeEvent.type === 'keypress' && e.nativeEvent.code !== 'Enter') {\n        // Needed because focus of element when searching\n        // Check if keypress is a valid string\n        // const stringPattern = /^[a-zA-ZåäöÅÄÖ]/;\n        // const match = e.nativeEvent.key.match(stringPattern);\n        if (inputRef && inputRef.current) {\n          inputRef.current.focus()\n          inputRef.current.value += e.nativeEvent.key\n          setSearchValue(inputRef.current.value)\n        }\n        return\n      }\n\n      setSelectedValue(option.text)\n      setFocus(index)\n      setSearchValue('')\n      setIsFocused(false)\n      if (inputRef.current) inputRef.current.value = ''\n      setFilteredOptions(options || [])\n      if (handleChange) handleChange(option)\n    }\n\n    const handleClickOutside = (e: any) => {\n      if (dropMenuRef.current && !dropMenuRef.current.contains(e.target)) {\n        setIsFocused(false)\n      }\n    }\n\n    const searchDebounce = useCallback(debounce(500, setSearchValue), [])\n\n    const getElementFromTop = useCallback((): void => {\n      if (dropMenuRef.current) {\n        const dropRect = dropMenuRef.current.getBoundingClientRect()\n        const { clientHeight } = document.documentElement\n        const inUpperHalf = dropRect.top < clientHeight / 2 - dropRect.height / 2\n        let maxHeight = 300\n        setFromTop(inUpperHalf)\n        if (dropRect.top > 0 && dropRect.top < clientHeight) {\n          const margin = 16\n          const setHeight = inUpperHalf\n            ? clientHeight - (dropRect.top + dropRect.height)\n            : dropRect.top\n          maxHeight = setHeight > maxHeight ? maxHeight : setHeight - margin\n        }\n        setDropMaxHeight(maxHeight)\n      }\n    }, [])\n\n    const emitHandle = (newValue: string | null) => {\n      const newOption = options?.find((o) => o.text === newValue) || null\n\n      if (handleChange) {\n        handleChange(newOption)\n      }\n    }\n\n    const handleDropdownKeyPress = (e: any) => {\n      if (e.key === 'Escape') {\n        setIsFocused(false)\n      } else if (e.key === 'Enter' && !disabled) {\n        setIsFocused(!isFocused)\n      }\n    }\n\n    useEffect(() => {\n      // console.log('Handle search value: ', searchValue);\n      if (searchValue.length > 0 && options) {\n        setFilteredOptions([\n          ...options.filter(\n            (option: Option) =>\n              option.value.toLowerCase().includes(searchValue.toLowerCase()) ||\n              option.text.toLowerCase().includes(searchValue.toLowerCase()),\n          ),\n        ])\n      } else {\n        setFilteredOptions(options || [])\n      }\n    }, [searchValue])\n\n    // const clearValue = (e: any) => {\n    //   e.stopPropagation()\n    //   setSelectedValue(defaultValue)\n    //   emitHandle(null)\n    // }\n\n    useEffect(() => {\n      if (inputRef.current) {\n        if (isFocused) {\n          inputRef.current.focus()\n        } else {\n          inputRef.current.blur()\n        }\n      }\n      if (isFocused) {\n        getElementFromTop()\n        window.addEventListener('scroll', getElementFromTop)\n        document.addEventListener('mousedown', handleClickOutside)\n      }\n      return () => {\n        window.removeEventListener('scroll', getElementFromTop)\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [isFocused])\n\n    useEffect(() => {\n      if (selectedValue && selectedValue.length > 0) {\n        setHasValue(true)\n        emitHandle(selectedValue)\n      } else {\n        setHasValue(false)\n      }\n    }, [selectedValue])\n\n    useEffect(() => {\n      if (options) {\n        setFilteredOptions([...options])\n      }\n    }, [options])\n\n    useEffect(() => {\n      setSelectedValue(defaultValue)\n    }, [defaultValue])\n\n    return (\n      <StyledDropdown\n        className={` ${disabled && 'disabled'} ${isFocused && 'is-focused'}`}\n        ref={dropMenuRef}\n        role=\"combobox\"\n        aria-expanded={isFocused}\n        aria-disabled={disabled || false}\n        onClick={() => !disabled && setIsFocused(!isFocused)}\n        onKeyDown={handleDropdownKeyPress}\n        tabIndex={0}\n        {...rest}\n      >\n        {search && icon && <div className=\"icon search-icon\">{icon}</div>}\n        {search && (\n          <input\n            // isFocused={isFocused}\n            className={`dropdown-input ${!!icon && 'has-icon'} ${hasValue && '.has-value'}`}\n            disabled={disabled || false}\n            ref={inputRef}\n            type=\"text\"\n            aria-autocomplete=\"list\"\n            aria-label={selectedValue || placeholder}\n            autoComplete=\"off\"\n            tabIndex={0}\n            placeholder={hasValue ? selectedValue : placeholder}\n            onChange={(e) => searchDebounce(e.target.value)}\n          />\n        )}\n        {!search && (\n          <label className={`styled-label`} role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\">\n            {icon && <div className=\"icon\">{icon}</div>}\n            {hasValue ? selectedValue : placeholder}\n          </label>\n        )}\n        {/* {clearable && (\n          <button\n            className=\"clear-button\"\n            title=\"clear value\"\n            disabled={selectedValue === defaultValue}\n            onClick={clearValue}\n          >\n            <TimesIcon />\n          </button>\n        )} */}\n        <i aria-hidden=\"true\" className={`dropdown-icon ${isFocused && 'is-focused'}`}>\n          <AngleDownIcon />\n        </i>\n        {filteredOptions.length > 0 && (\n          <ul\n            className={`dropdown ${isFocused ? 'is-focused' : ''} ${fromTop ? 'from-top' : ''}`}\n            style={{ maxHeight: `${setMaxHeight || dropMaxHeight}px` }}\n            aria-label={placeholder}\n            role=\"listbox\"\n            ref={ref}\n          >\n            {filteredOptions.map((option: Option, index: number) => (\n              <DropdownItem\n                key={option.value}\n                option={option}\n                index={index}\n                handleClick={handleClick}\n                focus={focus === index}\n              />\n            ))}\n          </ul>\n        )}\n      </StyledDropdown>\n    )\n  },\n)\n"],"names":["useRoveFocus","size","enabled","currentFocus","setCurrentFocus","useState","handleKeyDown","useCallback","e","useEffect","document","useScript","url","script","AngleDownIcon","props","_jsxs","IconWrapper","_jsx","DropdownItem","option","focus","index","ref","useRef","text","StyledDropdown","styled","debounce","delay","fn","inDebounce","args","clearTimeout","Dropdown","forwardRef","placeholder","options","search","disabled","defaultValue","value","icon","handleChange","setMaxHeight","selectedValue","setSelectedValue","searchValue","setSearchValue","isFocused","setIsFocused","fromTop","setFromTop","dropMaxHeight","setDropMaxHeight","hasValue","setHasValue","filteredOptions","setFilteredOptions","setFocus","dropMenuRef","inputRef","handleClick","handleClickOutside","searchDebounce","getElementFromTop","dropRect","clientHeight","inUpperHalf","maxHeight","setHeight","margin","emitHandle","newValue","newOption","o","handleDropdownKeyPress","window","rest"],"mappings":"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"}