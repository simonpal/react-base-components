{"version":3,"file":"Tabs.stories.36d44505.js","sources":["../../src/components/Tabs/Tabs.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n// import TabItem from '../TabItem';\n\nconst TabHeaders = styled.ul`\n  display: flex;\n  list-style-type: none;\n  font-size: 1.1rem;\n  font-weight: bold;\n  margin: 0 0 1.5rem 0;\n  padding: 0;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  li {\n    background-color: transparent;\n    display: inline-flex;\n\n    button,\n    span {\n      border: 0;\n\n      color: #444;\n      background-color: transparent;\n      padding: var(--spacing-xs);\n      position: relative;\n      font-weight: bold;\n    }\n\n    button {\n      cursor: pointer;\n\n      &:disabled {\n        opacity: 0.5;\n        cursor: default;\n      }\n    }\n\n    &.active button {\n      color: #000;\n      text-decoration: underline;\n    }\n\n    &:not(:first-of-type) {\n      button::before,\n      span::before {\n        content: '';\n        border-right: 1px solid #eee;\n        height: 18px;\n        position: absolute;\n        left: 0;\n      }\n    }\n  }\n`\n\nexport type TabProps = {\n  children: React.ReactNode[]\n  defaultActiveIndex?: number\n  onTabChange?: (idx: number) => void\n  className?: string\n}\n\nexport const Tabs = ({ children, onTabChange, defaultActiveIndex = 0, className }: TabProps) => {\n  // Dependant on children\n  if (!children) return null\n\n  const [activeTab, setActiveTab] = useState<number>(defaultActiveIndex)\n\n  const isActive = (idx: number): boolean => activeTab === idx\n\n  const handleClick = (idx: number) => {\n    setActiveTab(idx)\n    if (typeof onTabChange === 'function') {\n      onTabChange(idx)\n    }\n  }\n\n  return (\n    <div>\n      <TabHeaders className={`base-tabs-headers ${className}`} role=\"tablist\">\n        {children &&\n          children.map((child: any, index: number) => (\n            <li\n              className={`${isActive(index) ? 'active' : ''} ${\n                child.props.disabled ? 'disabled' : ''\n              }`}\n              key={child.props.eventKey}\n            >\n              <button\n                disabled={child.props.disabled}\n                aria-selected={isActive(index)}\n                aria-controls={`${child.props.eventKey}-content`}\n                id={`${child.props.eventKey}-control`}\n                type=\"button\"\n                role=\"tab\"\n                onClick={() => handleClick(index)}\n              >\n                {child.props.title}\n              </button>\n              {/* \n              {child.props.disabled && <span>{child.props.title}</span>} */}\n            </li>\n          ))}\n      </TabHeaders>\n      {children &&\n        children.map((item: any, index: number) => (\n          <TabItem\n            key={`tabitem-${item.props.eventKey}`}\n            {...item.props}\n            visible={isActive(index)}\n          />\n        ))}\n    </div>\n  )\n}\n\nexport type TabItemProps = {\n  children: any\n  eventKey: string\n  title: string\n  disabled?: boolean\n  visible?: boolean\n}\n\nexport const TabItem = ({ children, visible = false, eventKey, title }: TabItemProps) => {\n  if (!visible) {\n    return null\n  }\n  return (\n    <div role=\"tabpanel\" id={`${eventKey}-content`} aria-labelledby={`${eventKey}-control`}>\n      {children}\n    </div>\n  )\n}\n"],"names":["TabHeaders","styled","Tabs","children","onTabChange","className","activeTab","setActiveTab","useState","defaultActiveIndex","isActive","idx","handleClick","_jsxs","_jsx","child","index","disabled","eventKey","title","item","TabItem","props","visible"],"mappings":"mKAIA,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2DOC,EAAA,CAAA,CAAc,SAAAC,EAAEA,YAAAA,EAAUC,mBAAAA,EAAAA,EAAkC,UAAAC,CAAuB,IAAA,CAExF,GAAA,CAAAF,EAAe,OAAA,KAEf,KAAA,CAAAG,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAAC,CAAA,EAEAC,EAAAC,GAAAL,IAAAK,EAEAC,EAAAD,GAAA,CACEJ,EAAAA,CAAAA,EACA,OAAAH,GAAA,YACEA,EAAAA,CAAAA,CACF,EAGF,OAAAS,EAAA,MAAA,CACE,SAAA,CAAAC,EAAAd,EAAA,CACa,UAAA,qBAAAK,IAAiCA,KAAAA,UAAkB,SAAAF,GAAAA,EAAA,IAAA,CAAAY,EAAAC,IAAAF,EAAA,KAAA,CAGxD,UAAA,GAAAJ,EAAAM,CAAA,EAAA,SAAA,MAAAD,EAAA,MAAA,SAAA,WAAA,KAEwC,SAAAD,EAAA,SAAA,CAItC,SAAAC,EAAA,MAAA,SACwBE,gBAAAA,EAAAA,CAAAA,EACO,gBAAA,GAAAF,EAAA,MAAA,mBACCG,GAAAA,GAAAA,EAAAA,MAAAA,mBACXA,KAAAA,SACd,KAAA,MACA,QAAA,IAAAN,EAAAI,CAAA,EAC2B,SAAAD,EAAA,MAAA,KAEnBI,CAAAA,CAAK,EAAAJ,EAAA,MAAA,QAAA,CAAA,CAKvB,CAAA,EAAAZ,GAAAA,EAAA,IAAA,CAAAiB,EAAAJ,IAAAF,EAAAO,EAAA,CAIO,GAAAD,EAAA,MAEGE,QAAAA,EAAAA,CAAAA,CACc,EAAA,WAAAF,EAAA,MAAA,UAAA,CAAA,CAAA,CAEzB,CAAA,CAGV,EAUOC,EAAA,CAAA,CAAiB,SAAAlB,EAAEA,QAAAA,EAAAA,GAAoB,SAAAe,EAAOA,MAAAA,CAA8B,IACjFK,EAGAT,EAAA,MAAA,CACE,KAAA,WAAU,GAAA,GAAAI,YAAkBA,kBAAAA,GAAAA,YAAwCA,SAAAA,CAAmBf,CAAAA,EAHvF;;;;;;;;;;;;;;;;;;;"}