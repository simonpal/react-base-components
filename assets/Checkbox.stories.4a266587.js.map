{"version":3,"file":"Checkbox.stories.4a266587.js","sources":["../../src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\n\nimport { FormControl } from '../FormControl/FormControl'\nimport { Label } from '../FormControl/Label'\n\nconst CheckboxWrapper = styled(FormControl)`\n  --form-control-color: #0000ff;\n  --form-control-disabled: #555;\n  align-items: center;\n  input[type='checkbox'] {\n    /* Add if not using autoprefixer */\n    -webkit-appearance: none;\n    /* Remove most all native input styles */\n    appearance: none;\n    /* For iOS < 15 */\n    background-color: transparent;\n    /* Not removed via appearance */\n    margin: 0 0.5rem 0 0;\n\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 0.15em;\n    transform: translateY(-0.075em);\n\n    display: grid;\n    place-content: center;\n    &:before {\n      content: '';\n      width: 0.65em;\n      height: 0.65em;\n      clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n      transform: scale(0);\n      transform-origin: bottom left;\n      transition: 120ms transform ease-in-out;\n      box-shadow: inset 1em 1em var(--form-control-color);\n      /* Windows High Contrast Mode */\n      background-color: CanvasText;\n    }\n    &:checked:before {\n      transform: scale(1);\n    }\n    &:focus {\n      outline: max(2px, 0.15em) solid #0000ff;\n      outline-offset: max(2px, 0.15em);\n    }\n    &:disabled {\n      --form-control-color: var(--form-control-disabled);\n\n      color: var(--form-control-disabled);\n      cursor: not-allowed;\n    }\n  }\n`\n\nexport type CheckboxProps = {\n  fullWidth?: boolean\n  id: string\n  label: string | JSX.Element\n  value?: string\n  hideLabel?: boolean\n  name?: string\n}\n\nexport type StyledCheckboxProps = {\n  $fullWidth: boolean\n}\n\nexport const Checkbox = forwardRef<\n  HTMLInputElement,\n  CheckboxProps & React.InputHTMLAttributes<HTMLInputElement>\n>(\n  (\n    {\n      fullWidth = false,\n      id,\n      label,\n      value = '',\n      onChange,\n      hideLabel,\n      className,\n      name = '',\n      ...rest\n    },\n    ref?: React.Ref<HTMLInputElement>,\n  ) => {\n    return (\n      <CheckboxWrapper\n        inlineControl\n        fullWidth={fullWidth}\n        className={`base-checkbox ${className ? ` ${className}` : ''}`}\n      >\n        <Label htmlFor={id} tabIndex={0}>\n          <input\n            type=\"checkbox\"\n            id={id}\n            onChange={onChange}\n            name={name}\n            value={value}\n            {...rest}\n            ref={ref}\n          />\n\n          {!hideLabel && label}\n        </Label>\n      </CheckboxWrapper>\n    )\n  },\n)\n"],"names":["CheckboxWrapper","styled","FormControl","Checkbox","forwardRef","fullWidth","id","label","onChange","hideLabel","className","rest","ref","_jsx","_jsxs","Label","name","value"],"mappings":"yPAMA,MAAAA,EAAAC,EAAAC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiEOC,EAAAC,EAAA,QAAA,WAAA,CAAA,CAKH,UAAAC,EAAA,GACc,GAAAC,EACZA,MAAAA,EACAC,MAAAA,EAAAA,GACQ,SAAAC,EACRA,UAAAA,EACAC,UAAAA,EACAC,KAAAA,EAAAA,MACOC,CAET,EAAAC,IAGAC,EAAAb,EAAA,CACkB,cAAA,GACD,UAAAK,EACbA,UAAAA,iBAAAA,EAAAA,IAAAA,IAAAA,KAC0D,SAAAS,EAAAC,EAAA,CAEpD,QAAAT,EAAUA,SAAAA,EAAc,SAAA,CAAAO,EAAA,QAAA,CAC5B,KAAA,WACO,GAAAP,EACLA,SAAAA,EACAE,KAAAA,EACAQ,MAAAA,EACAC,GAAAA,EACIN,IAAAA,CACJC,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,CAGkB,CAAA,CAAA,CAAA,CAI5B;;;;;"}