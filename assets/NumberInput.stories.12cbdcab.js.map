{"version":3,"file":"NumberInput.stories.12cbdcab.js","sources":["../../src/components/NumberInput/NumberInput.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { FormControl } from '../FormControl/FormControl'\n\nexport interface NumberInputProps extends React.HTMLAttributes<HTMLInputElement> {\n  label: string\n  hideLabel?: boolean\n  fullWidth?: boolean\n  value?: number\n  min?: number\n  max?: number\n  required?: boolean\n  disabled?: boolean\n  handleChange: (val: number) => void\n}\n\nconst NumberInputWrapper = styled.div`\n  --input-radius: 0;\n  --size-input-default: 3rem;\n  --input-border-color: #ccc;\n  display: inline-flex;\n  flex-direction: row;\n  height: var(--size-input-default);\n  // line-height: var(--sizes-input-default);\n  border: 1px solid var(--input-border-color);\n  border-radius: var(--input-radius);\n  font-size: 1rem;\n  transition: all 0.2s ease;\n  position: relative;\n  width: 100%;\n  background-color: #fff;\n  align-items: stretch;\n\n  button {\n    // height: 100%;\n    width: 2rem;\n    background-color: transparent;\n    // display: inline-flex;\n    // flex-grow: 0;\n    font-size: 1.5rem;\n    border: 0;\n    color: #000;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n\n    &:last-of-type {\n      border-left: 1px solid var(--input-border-color);\n    }\n\n    &:first-of-type {\n      border-right: 1px solid var(--input-border-color);\n    }\n\n    &:disabled {\n      svg {\n        path {\n          fill: var(--input-border-color);\n        }\n      }\n\n      cursor: not-allowed;\n      color: var(--input-border-color);\n    }\n  }\n\n  input:not([type='checkbox']):not([type='radio']) {\n    display: inline-flex;\n    height: 100%;\n    min-width: 2rem;\n    text-align: center;\n    border: 0;\n    background-color: transparent;\n    width: calc(100% - 4rem);\n    padding: 0 var(--spacing-s);\n    font-size: 1rem;\n    -moz-appearance: textfield;\n    box-shadow: none;\n    flex-grow: 1;\n    color: #000;\n\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n    }\n\n    &:disabled {\n      color: var(--input-border-color);\n    }\n  }\n`\n\nexport const NumberInput = forwardRef<HTMLInputElement, NumberInputProps>(\n  (\n    {\n      min = 1,\n      max = 10000,\n      value = 1,\n      hideLabel = false,\n      fullWidth = false,\n      label = '',\n      id = '',\n      required = false,\n      handleChange,\n      disabled = false,\n      ...rest\n    },\n    ref?: React.Ref<HTMLInputElement>,\n  ) => {\n    const _handleChange = (_value: number) => {\n      if (_value >= min && _value <= max) {\n        handleChange(_value)\n      }\n    }\n\n    const minButtonDisabled = useMemo(() => {\n      return disabled || value === min\n    }, [disabled, value, min])\n    const maxButtonDisabled = useMemo(() => {\n      return disabled || value === max\n    }, [disabled, value, max])\n\n    return (\n      <FormControl fullWidth={fullWidth}>\n        {!hideLabel && (\n          <label htmlFor={id}>\n            {label}\n            {required && <span>(required)</span>}\n          </label>\n        )}\n        <NumberInputWrapper className={`base-number-input-wrapper`}>\n          <button\n            disabled={minButtonDisabled}\n            onClick={() => _handleChange(value - 1)}\n            aria-label=\"Decrease\"\n          >\n            -\n          </button>\n          <input\n            id={id}\n            type=\"number\"\n            min={min}\n            max={max}\n            value={value}\n            disabled={disabled}\n            onFocus={(e) => e.target.select()}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              _handleChange(Number(e.target.value))\n            }}\n            // onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => handleKeyDown(e)}\n            ref={ref}\n            aria-label=\"Quantity\"\n            {...rest}\n          />\n          <button\n            disabled={maxButtonDisabled}\n            onClick={() => _handleChange(Number(value) + 1)}\n            aria-label=\"Increase\"\n          >\n            +\n          </button>\n        </NumberInputWrapper>\n      </FormControl>\n    )\n  },\n)\n"],"names":["NumberInputWrapper","styled","NumberInput","forwardRef","min","max","value","hideLabel","fullWidth","label","id","required","handleChange","rest","ref","_handleChange","_value","minButtonDisabled","useMemo","disabled","maxButtonDisabled","_jsxs","FormControl","_jsx","e"],"mappings":"iNAiaAAAC,EACXA,SAAAA,EAAAA,MACWC,CAEb,EAAAC,IAAA,CAGA,MAAAC,EAAAC,GAAA,CACEA,GAAAZ,GAAAY,GAAAX,GACEO,EAAAA,CAAAA,CACF,EAGFK,EAAAC,EAAAA,QAAAA,QAAA,IACEC,GAAAb,IAAAF,EAA6BA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAE/BgB,EAAAF,EAAAA,QAAAA,QAAA,IACEC,GAAAb,IAAAD,EAA6BA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAG/B,OAAAgB,EAAAC,EAAA,CACc,UAAAd,EAACA,SAAAA,CAAAA,CAAAA,GAAAA,EAAAA,QAAAA,CAET,QAAAE,EAAgBA,SAAAA,CAAAA,EAAAA,GAAAA,EAAAA,OAAAA,CAED,SAAA,YAAM,CAAA,CAAA,CAAiB,CAAA,EAAAW,EAAArB,EAAA,CAGrB,UAAA,4BAAa,SAAA,CAAAuB,EAAA,SAAA,CAC9B,SAAAN,EACYA,QAAAA,IAAAA,EAAAA,EAAAA,CAAAA,EAC4B,aAAA,WAC3B,SAAA,GACZ,CAAA,EAAAM,EAAA,QAAA,CAGD,GAAAb,EACEA,KAAAA,SACK,IAAAN,EACLA,IAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAa,QAAAA,GAAAA,EAAAA,OAAAA,OAAAA,EACkC,SAAAK,GAAA,CAEhCT,EAAAA,OAAAA,EAAAA,OAAAA,KAAAA,CAAAA,CAAoC,EACtC,IAAAD,EAEAA,aAAAA,WACW,GAAAD,CACPA,CAAAA,EAAAA,EAAAA,SAAAA,CAEN,SAAAO,EACYA,QAAAA,IAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAAA,EACoC,aAAA,WACnC,SAAA,GACZ,CAAA,CAAA,CAEQ,CAAA,CAAA,CACU,CAAA,CAG3B,CAAA;;"}