{"version":3,"file":"Button.950881d0.js","sources":["../../src/components/Button/Button.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst ripple = keyframes`\n  from {\n      opacity: 0.7;\n      transform: scale(0);\n  }\n\n  to {\n      opacity: 0;\n      transform: scale(10);\n  }\n`\n\ntype StyledButtonProps = {\n  $fullWidth: boolean\n  $iconLeft: boolean\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  --button-font-size: 16px;\n  --color-button-primary-background: #000;\n  --color-button-primary-color: #fff;\n  --color-button-primary-hover: #010101;\n  --color-button-secondary-background: #eee;\n  --color-button-secondary-color: #000;\n  --color-button-secondary-hover: #ddd;\n  --color-button-tertiary-background: transparent;\n  --color-button-tertiary-color: #000;\n  --color-button-tertiary-hover: transparent;\n  --size-button-default: 3rem;\n  --button-radius: 1.5rem;\n  --ripple-background: #010101;\n  --color-button-outline-background: transparent;\n  --color-button-outline-color: #000;\n  --color-button-outline-border: #000;\n  font-family: inherit;\n  background-color: var(--color-button-primary-background);\n  color: var(--color-button-primary-color);\n  height: var(--size-button-default);\n  border-radius: var(--button-radius);\n  padding: 0 1rem;\n  border-width: 0;\n  font-size: var(--button-font-size);\n  font-weight: bold;\n  display: ${({ $fullWidth }) => ($fullWidth ? 'flex' : 'inline-flex')};\n  justify-content: center;\n  line-height: 100%;\n  cursor: pointer;\n  align-items: center;\n  transition: all 0.2s ease;\n\n  @media screen and (max-width: 600px) {\n    position: relative;\n    overflow: hidden;\n\n    &::after {\n      display: none;\n      content: '';\n      position: absolute;\n      border-radius: 50%;\n\n      width: 100px;\n      height: 100px;\n      margin-top: -50px;\n      margin-left: -50px;\n\n      background-color: var(--ripple-background);\n\n      /* Center the ripple */\n      top: 50%;\n      left: 50%;\n\n      animation: ${ripple} 1s;\n      opacity: 0;\n    }\n\n    &:focus:not(:active)::after {\n      display: block;\n    }\n  }\n\n  svg {\n    margin: ${({ $iconLeft }) =>\n      $iconLeft ? '0 var(--spacing-xs) 0 0' : '0 0 0 var(--spacing-xs)'};\n    path {\n      fill: var(--color-button-primary-color);\n    }\n  }\n  &:hover {\n    @media screen and (min-width: 601px) {\n      background-color: var(--color-button-primary-hover);\n    }\n  }\n\n  &:disabled {\n    // background-color: var(--color-button-primary-disabled);\n    cursor: default;\n    opacity: 0.5;\n  }\n\n  &.secondary {\n    background-color: var(--color-button-secondary-background);\n    color: var(--color-button-secondary-color);\n\n    &:hover {\n      @media screen and (min-width: 601px) {\n        background-color: var(--color-button-secondary-hover);\n      }\n    }\n\n    svg path {\n      fill: var(--color-button-secondary-color);\n    }\n  }\n\n  &.tertiary {\n    padding: 0;\n    background-color: var(--color-button-tertiary-background);\n    color: var(--color-button-tertiary-color);\n\n    &:hover {\n      @media screen and (min-width: 601px) {\n        background-color: var(--color-button-tertiary-hover);\n      }\n    }\n\n    svg path {\n      fill: var(--color-button-tertiary-color);\n    }\n  }\n\n  &.outline {\n    background-color: var(--color-button-outline-background);\n    color: var(--color-button-outline-color);\n    border: 1px solid var(--color-button-outline-border);\n\n    &:hover {\n      @media screen and (min-width: 601px) {\n        background-color: var(--color-button-outline-hover);\n      }\n    }\n\n    svg path {\n      fill: var(--color-button-outline-color);\n    }\n  }\n`\n\nexport type ButtonProps = {\n  priority?: 'primary' | 'secondary' | 'tertiary' | 'outline'\n  disabled?: boolean\n  type?: 'button' | 'submit' | 'reset'\n  fullWidth?: boolean\n  children: React.ReactNode\n  iconLeft?: boolean\n}\n\nexport const Button = forwardRef<\n  HTMLButtonElement,\n  ButtonProps & React.HTMLAttributes<HTMLButtonElement>\n>(\n  (\n    {\n      children,\n      priority = 'primary',\n      disabled = false,\n      type = 'button',\n      fullWidth = false,\n      onClick,\n      iconLeft = false,\n      className,\n      ...rest\n    },\n    ref?: React.Ref<HTMLButtonElement>,\n  ) => {\n    const inlineStyle: any = useMemo(\n      () => ({\n        ['--ripple-background']: `var(--color-button-${priority}-hover)`,\n      }),\n      [priority],\n    )\n\n    return (\n      <StyledButton\n        style={inlineStyle}\n        aria-label={type}\n        className={`base-button ${priority} icon-${iconLeft ? 'left' : 'right'} ${\n          className ? ` ${className}` : ''\n        }`}\n        onClick={onClick}\n        type={type}\n        disabled={disabled}\n        $fullWidth={fullWidth}\n        $iconLeft={iconLeft}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </StyledButton>\n    )\n  },\n)\n\nexport default Button\n"],"names":["ripple","keyframes","StyledButton","styled","button","$fullWidth","$iconLeft","Button","forwardRef","children","disabled","type","fullWidth","onClick","className","ref","inlineStyle","useMemo","priority","_jsx","iconLeft","rest"],"mappings":"4HAGA,MAAAA,EAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAiBAC,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4BC,CAAAA,CA0Bd,WAAAC,CAAa,IAAAA,EAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA6BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4BrCA,CAAAA,CAUJ,UAAAM,CAAY,IAAAA,EAAA,0BAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2EpBC,EAAAC,EAAA,QAAA,WAAA,CAAA,CAKH,SAAAC,EACEA,SAAAA,EAAAA,UACW,SAAAC,EAAA,GACA,KAAAC,EAAA,SACJ,UAAAC,EAAA,GACK,QAAAC,EACZA,SAAAA,EAAAA,GACW,UAAAC,KACXA,CAEF,EAAAC,IAAA,CAGA,MAAAC,EAAAC,EAAAA,QAAAA,QAAA,KAAA,CACS,CAAA,uBAAA,sBAAAC,UAC0CA,GAAAA,CAAAA,CAAAA,CAAAA,EAKnD,OAAAC,EAAAjB,EAAA,CACe,MAAAc,EACJA,aAAAA,EACKL,UAAAA,eAAAA,UAAAA,EAAAA,OAAAA,WAAAA,EAAAA,IAAAA,IAAAA,KAEoB,QAAAE,EAEhCA,KAAAA,EACAF,SAAAA,EACAD,WAAAA,EACYE,UAAAA,EACDQ,IAAAA,EACXL,GAAAA,EACIM,SAAAA,CAAIZ,CAAAA,CAKd,CAAA"}