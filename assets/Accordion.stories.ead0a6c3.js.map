{"version":3,"file":"Accordion.stories.ead0a6c3.js","sources":["../../src/components/Accordion/Accordion.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState } from 'react'\nimport styled from 'styled-components'\n\nconst StyledAccordionItem = styled.div`\n  --accordion-max-height: 500px;\n  margin-bottom: var(--spacing-s);\n  display: flex;\n  flex-direction: column;\n`\n\nconst AccordionTitleButton = styled.button`\n  flex-direction: row;\n  height: var(--size-button-default, 2.5rem);\n  font-size: 1rem;\n  line-height: 1.5;\n  font-weight: bold;\n  padding: var(--spacing-xs);\n  display: flex;\n  align-items: center;\n  border: 0;\n  justify-content: space-between;\n  cursor: pointer;\n\n  svg {\n    transition: transform 0.3s ease;\n  }\n\n  &.open {\n    svg {\n      transform: rotate(180deg);\n    }\n  }\n\n  &.disabled {\n    opacity: 0.7;\n    cursor: default;\n  }\n`\n\nconst AccordionContent = styled.div`\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  &.open {\n    max-height: var(--accordion-max-height);\n    overflow: auto;\n  }\n`\n// TODO: Implement a parent to use single select or multi\ntype AccordionCtx = {\n  activeItems?: string[]\n  handleChange?: any\n}\nexport const AccordionContext = createContext<AccordionCtx>({})\n\nexport type AccordionProps = {\n  singleSelect?: boolean\n  defaultActiveKey?: string\n}\n\nexport const Accordion: React.FC<AccordionProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  singleSelect,\n  children,\n  defaultActiveKey,\n}) => {\n  const [activeItems, setActiveItems] = useState<string[]>(\n    defaultActiveKey ? [defaultActiveKey] : [],\n  )\n\n  const handleChange = (key: string) => {\n    const isIncluded = activeItems.includes(key)\n    if (singleSelect) {\n      setActiveItems(isIncluded ? [] : [key])\n    } else {\n      setActiveItems((prevValues) =>\n        isIncluded ? [...prevValues.filter((x) => x !== key)] : [...prevValues, key],\n      )\n    }\n  }\n\n  return (\n    <AccordionContext.Provider\n      value={{\n        activeItems,\n        handleChange,\n      }}\n    >\n      <div className=\"base-accordion\">{children}</div>\n    </AccordionContext.Provider>\n  )\n}\n\nexport type AccordionItemProps = {\n  children: any\n  eventKey: string\n  title: string\n  maxHeight?: string\n  titleComponent?: JSX.Element\n  disabled?: boolean\n  onClick?: (key: string) => void\n}\n\nexport const AccordionItem: React.FC<AccordionItemProps> = ({\n  title,\n  eventKey,\n  children,\n  maxHeight = '500px',\n  titleComponent,\n  disabled = false,\n  onClick,\n}) => {\n  const { activeItems = [], handleChange } = useContext(AccordionContext)\n  const isOpen = activeItems.includes(eventKey)\n  const handleClick = () => {\n    handleChange(eventKey)\n    if (onClick) {\n      onClick(eventKey)\n    }\n  }\n  const contentStyle: any = useMemo(\n    () => ({\n      ['--accordion-max-height']: `${maxHeight || '500px'}`,\n    }),\n    [maxHeight],\n  )\n  return (\n    <StyledAccordionItem\n      className={`base-accordion-item-container ${isOpen ? 'accordion-open' : 'accordion-closed'}`}\n      data-state={isOpen ? 'open' : 'closed'}\n      data-disabled={disabled ? 'disabled' : 'enabled'}\n      aria-disabled={disabled}\n    >\n      {titleComponent &&\n        React.cloneElement(titleComponent, {\n          onClick: () => !disabled && handleClick(),\n          isOpen,\n          id: `${eventKey}-trigger`,\n          'aria-controls': `${eventKey}-section`,\n          'aria-expanded': isOpen,\n        })}\n      {!titleComponent && (\n        <AccordionTitleButton\n          className={`base-accordion-title ${disabled ? 'disabled' : ''} ${isOpen ? 'open' : ''}`}\n          type=\"button\"\n          id={`${eventKey}-trigger`}\n          aria-controls={`${eventKey}-section`}\n          onClick={() => !disabled && handleClick()}\n          aria-expanded={isOpen}\n        >\n          {title}\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n            <title>expand</title>\n            <path d=\"M19 6.25l-1.5-1.5-7.5 7.5-7.5-7.5L1 6.25l9 9 9-9z\" />\n          </svg>\n        </AccordionTitleButton>\n      )}\n\n      <AccordionContent\n        className={`base-accordion-content ${isOpen ? 'open' : ''}`}\n        id={`${eventKey}-section`}\n        style={contentStyle}\n        role=\"region\"\n        aria-labelledby={`${eventKey}-trigger`}\n      >\n        <div className=\"co-accordion-content-inner\">{children}</div>\n      </AccordionContent>\n    </StyledAccordionItem>\n  )\n}\n"],"names":["StyledAccordionItem","styled","AccordionTitleButton","AccordionContent","AccordionContext","createContext","Accordion","singleSelect","children","activeItems","setActiveItems","useState","defaultActiveKey","handleChange","key","isIncluded","_jsx","AccordionItem","title","eventKey","titleComponent","onClick","isOpen","handleClick","contentStyle","useMemo","maxHeight","_jsxs","disabled"],"mappings":"qKAGA,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOAC,EAAAD,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BAE,EAAAF,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcOG,EAAAC,EAAAA,QAAAA,cAAA,CAAA,CAAA,EAOAC,EAAA,CAAA,CAAoF,aAAAC,EACzFA,SAAAA,EACAC,iBAAAA,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,QAAAA,SAAAC,EAAA,CAAAA,CAAA,EAAA,CAAA,CAAA,EAIAC,EAAAC,GAAA,CACE,MAAAC,EAAAN,EAAA,SAAAK,CAAA,EAEEJ,EADFH,EACEG,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAEAA,GAAAA,EAAAA,CAAAA,GAAAA,EAAAA,OAAAA,GAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA,CAFAA,CAKF,EAGF,OAAAM,EAAAZ,EAAA,SAAA,CAC4B,MAAA,CACjB,YAAAK,EACLA,aAAAA,CACAI,EACF,SAAAG,EAAA,MAAA,CAEA,UAAA,iBAAe,SAAAR,CAAgBA,CAAAA,CAAU,CAAA,CAG/C,EAYOS,EAAA,CAAA,CAAqD,MAAAC,EAC1DA,SAAAA,EACAC,SAAAA,EACAX,UAAAA,EAAAA,QACY,eAAAY,EACZA,SAAAA,EAAAA,GACW,QAAAC,CAEb,IAAA,CACE,KAAA,CAAM,YAAAZ,EAAA,CAAA,EAAkB,aAAAI,CAAEA,EAAAA,EAAAA,QAAAA,WAAAA,CAAAA,EAC1BS,EAAAb,EAAA,SAAAU,CAAA,EACAI,EAAA,IAAA,CACEV,EAAAA,CAAAA,EACAQ,GACEA,EAAAA,CAAAA,CACF,EAEFG,EAAAC,EAAAA,QAAAA,QAAA,KAAA,CACS,CAAA,0BAAA,GAAAC,GAAA,SACuC,GAAA,CAAAA,CAAA,CAAA,EAIhD,OAAAC,EAAA3B,EAAA,CACsB,UAAA,iCAAAsB,EAAA,iBAAA,qBACsD,aAAAA,EAAA,OAAA,SAC1C,gBAAAM,EAAA,WAAA,UACS,gBAAAA,EACxBA,SAAAA,CAAAA,GAAAA,EAAAA,aAAAA,EAAAA,CAGsB,QAAA,IAAA,CAAAA,GAAAL,EAAA,EACQ,OAAAD,EACzCA,GAAAA,GAAAA,YACOH,gBAAAA,GAAAA,YACaA,gBAAAA,CACHG,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,EAAAA,CAGE,UAAA,wBAAAM,EAAA,WAAA,MAAAN,EAAA,OAAA,KACgE,KAAA,SAC9E,GAAA,GAAAH,YACEA,gBAAAA,GAAAA,YACWA,QAAAA,IAAAA,CAAAA,GAAAA,EAAAA,EACwB,gBAAAG,EAC3BA,SAAAA,CAAAA,EAAAA,EAAAA,MAAAA,CAGf,MAAA,6BAAW,MAAA,KAAmC,OAAA,KAAY,QAAA,YAAa,SAAA,CAAAN,EAAA,QAAA,CACrE,SAAA,QAAO,CAAA,EAAAA,EAAA,OAAA,CACP,EAAA,mDAAQ,CAAA,CAAA,CAAsD,CAAA,CAAA,CAC1D,CAAA,EAAAA,EAAAb,EAAA,CAIO,UAAA,0BAAAmB,EAAA,OAAA,KACwC,GAAA,GAAAH,YAChDA,MAAAA,EACAK,KAAAA,SACF,kBAAA,GAAAL,YACeA,SAAAA,EAAAA,MAAAA,CAEpB,UAAA,6BAAe,SAAAX,CAA4BA,CAAAA,CAAU,CAAA,CAAA,CACpC,CAAA,CAGzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}